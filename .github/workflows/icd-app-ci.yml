# .github/workflows/ci.yml
name: Build ICD_APP (esp-matter via idf-component-manager)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # ------------------- 이 부분이 수정되었습니다 -------------------
    # 1. esp-matter 리포지토리 자체만 shallow clone으로 빠르게 가져옵니다. (서브모듈은 가져오지 않음)
    - name: Checkout esp-matter repository (shallow)
      uses: actions/checkout@v4
      with:
        repository: espressif/esp-matter
        path: esp-matter
        submodules: false # 서브모듈 자동 클론 비활성화
        depth: 1         # 가장 최신 커밋만 가져오기

    # 2. esp-matter의 스크립트를 사용해 필요한 서브모듈만 shallow clone으로 가져옵니다.
    - name: Checkout esp-matter submodules (Optimized)
      run: |
        cd esp-matter
        ./scripts/checkout_submodules.sh --platform esp32 --depth 1
      shell: bash
    # ----------------------------------------------------------------

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Clone ESP-IDF
      run: |
        git clone --depth=1 -b v5.4.2 https://github.com/espressif/esp-idf.git
        cd esp-idf
        ./install.sh
      shell: bash

    - name: Set IDF_PATH env
      run: |
        echo "IDF_PATH=$GITHUB_WORKSPACE/esp-idf" >> $GITHUB_ENV
      shell: bash

    # --- 수정된 부분 ---
    # 빌드 단계에서 ESP_MATTER_PATH 환경 변수를 설정합니다.
    - name: Build project with idf-component-manager
      env:
        ESP_MATTER_PATH: ${{ github.workspace }}/esp-matter
      run: |
        . $IDF_PATH/export.sh
        idf.py set-target esp32c6
        idf.py reconfigure      # dependencies download
        idf.py build
      shell: bash

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: icd_app_build
        path: build/
